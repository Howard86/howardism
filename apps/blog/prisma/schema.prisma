// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model ResumeApplicant {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  name      String
  address   String
  phone     String
  email     String   @unique
  github    String
  website   String

  profiles ResumeProfile[]
}

model ResumeProfile {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt
  ordering    Int      @default(0) @db.UnsignedTinyInt()
  applicantId String
  company     String
  position    String
  summary     String   @db.Text

  applicant   ResumeApplicant    @relation(fields: [applicantId], references: [id])
  experiences ResumeExperience[]
  educations  ResumeEducation[]
  projects    ResumeProject[]
  skills      ResumeSkill[]
  languages   ResumeLanguage[]

  @@index([applicantId])
}

model ResumeExperience {
  id                 String    @id @default(cuid())
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @default(now()) @updatedAt
  ordering           Int       @default(0) @db.UnsignedTinyInt()
  profileId          String
  company            String
  companyUrl         String?
  companyDescription String?
  location           String
  title              String
  size               String?
  startDate          DateTime
  endDate            DateTime?
  responsibilities   Json
  description        String?   @db.Text

  Profile ResumeProfile @relation(fields: [profileId], references: [id])

  @@index([profileId])
}

model ResumeEducation {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt
  ordering    Int      @default(0) @db.UnsignedTinyInt()
  profileId   String
  facility    String
  degree      String
  location    String
  startDate   DateTime
  endDate     DateTime
  subjects    Json
  description String?  @db.Text

  Profile ResumeProfile @relation(fields: [profileId], references: [id])

  @@index([profileId])
}

model ResumeProject {
  id           String   @id @default(cuid())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now()) @updatedAt
  ordering     Int      @default(0) @db.UnsignedTinyInt()
  profileId    String
  title        String
  subtitle     String
  descriptions Json
  description  String?  @db.Text

  Profile ResumeProfile @relation(fields: [profileId], references: [id])

  @@index([profileId])
  @@map("ResumeProjects")
}

model ResumeSkill {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  ordering  Int      @default(0) @db.UnsignedTinyInt()
  profileId String
  title     String
  items     Json

  Profile ResumeProfile @relation(fields: [profileId], references: [id])

  @@index([profileId])
}

model ResumeLanguage {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt
  ordering    Int      @default(0) @db.UnsignedTinyInt()
  profileId   String
  name        String
  proficiency String

  Profile ResumeProfile @relation(fields: [profileId], references: [id])

  @@index([profileId])
}

model CommerceProduct {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  title     String
  price     Float
  color     String
  size      String
  imageUrl  String   @db.Text
  imageAlt  String

  orders CommerceOrderOnProduct[]
}

model CommerceOrder {
  id         String   @id @default(cuid())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now()) @updatedAt
  email      String
  name       String
  status     String
  totalPrice Float

  transactions CommerceTransaction[]
  products     CommerceOrderOnProduct[]
}

model CommerceOrderOnProduct {
  productId String
  orderId   String
  quantity  Int

  product CommerceProduct @relation(fields: [productId], references: [id], onDelete: Cascade)
  order   CommerceOrder   @relation(fields: [orderId], references: [id], onDelete: Cascade)

  @@id([productId, orderId])
  @@index([orderId])
  @@index([productId])
}

model CommerceTransaction {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  channelId Int      @unique
  amount    Float
  currency  String
  status    String
  orderId   String

  order CommerceOrder @relation(fields: [orderId], references: [id])

  @@index([orderId])
}
